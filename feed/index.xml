<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Welcome to TestNX</title>
	<atom:link href="http://192.168.31.11/feed?simply_static_page=7" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A new way for software testing</description>
	<lastBuildDate>Thu, 23 Feb 2023 06:13:51 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.1.1</generator>

<image>
	<url>/wp-content/uploads/2023/01/cropped-icon-robot-32x32.png</url>
	<title>Welcome to TestNX</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Implementing Method Chaining with a Page Object Model</title>
		<link>/articles/implementing-method-chaining-with-a-page-object-model</link>
		
		<dc:creator><![CDATA[TestNX]]></dc:creator>
		<pubDate>Sun, 29 Jan 2023 07:22:04 +0000</pubDate>
				<category><![CDATA[New]]></category>
		<guid isPermaLink="false">/?p=19</guid>

					<description><![CDATA[Page Object Model Design Pattern When creating a test automation framework using the Page Object Model design pattern and Selenium, a useful feature to add is Method Chaining (also known as Fluid Syntax) to make your test steps more readable and therefore maintainable. So instead of your test code using a LoginPage object like this: [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>Sharing data between SpecFlow classes using Context Injection</title>
		<link>/articles/sharing-data-between-specflow-classes-using-context-injection</link>
		
		<dc:creator><![CDATA[TestNX]]></dc:creator>
		<pubDate>Sun, 29 Jan 2023 07:20:06 +0000</pubDate>
				<category><![CDATA[Setup]]></category>
		<guid isPermaLink="false">/?p=17</guid>

					<description><![CDATA[Sharing data between step definition methods within the same class is pretty straightforward in SpecFlow – you can simply create and use a class variable – but how do we share data between steps in different classes? In the past this was done using Scenario Context and Feature Context, however these are now outdated (and [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>Hate Cucumber &#038; BDD for API tests?</title>
		<link>/articles/hate-cucumber-bdd-for-api-tests</link>
		
		<dc:creator><![CDATA[TestNX]]></dc:creator>
		<pubDate>Sun, 29 Jan 2023 07:19:11 +0000</pubDate>
				<category><![CDATA[Technology]]></category>
		<guid isPermaLink="false">/?p=15</guid>

					<description><![CDATA[It’s crucial to know when to use Cucumber and BDD to test APIs, and when NOT to. It’s a controversial topic and many have strong views on this, so in this article we’re going to take a good look – using real world examples –&#160;of when to use BDD, Cucumber, feature files and Gherkin to [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>5 Testing Newsletters You Should Follow</title>
		<link>/articles/5-testing-newsletters-you-should-follow</link>
		
		<dc:creator><![CDATA[TestNX]]></dc:creator>
		<pubDate>Sun, 29 Jan 2023 07:17:53 +0000</pubDate>
				<category><![CDATA[Setup]]></category>
		<guid isPermaLink="false">/?p=13</guid>

					<description><![CDATA[Five for Friday Five for Friday&#160;is Alan Page’s (a.k.a. Angry Weasel, and you might also know him from the&#160;AB Testing podcast) selection of 5 weekly articles, published, you guessed it, each Friday. There is no email subscription at the moment, but you can find the article lists on his website, or you can subscribe to [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>Create a mock REST API with zero coding – fast!</title>
		<link>/articles/test-page</link>
					<comments>/articles/test-page#respond</comments>
		
		<dc:creator><![CDATA[TestNX]]></dc:creator>
		<pubDate>Wed, 25 Jan 2023 06:23:42 +0000</pubDate>
				<category><![CDATA[Technology]]></category>
		<guid isPermaLink="false">/?p=5</guid>

					<description><![CDATA[Introduction There are times when it’s super-useful to be able to quickly&#160;create your own RESTful API, whether it’s for learning test automation or for front-end developers needing a mock back-end. You could code your own API but it’s a time-consuming and tricky process. Alternatively public APIs are available but suffer from significant drawbacks: you can [&#8230;]]]></description>
		
					<wfw:commentRss>/articles/test-page/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>TestProject end of life: Your questions answered</title>
		<link>/articles/hello-world</link>
					<comments>/articles/hello-world#comments</comments>
		
		<dc:creator><![CDATA[TestNX]]></dc:creator>
		<pubDate>Wed, 25 Jan 2023 06:14:30 +0000</pubDate>
				<category><![CDATA[Technology]]></category>
		<guid isPermaLink="false">/?p=1</guid>

					<description><![CDATA[TestProject will end of life (EOL) on March 31, 2023.&#160; Since acquiring TestProject in August 2019, Tricentis has made significant investments into the platform and has been pleased to maintain its use free of charge as established by the TestProject founders nearly eight years ago. However, the extensive work required to maintain and update the [&#8230;]]]></description>
		
					<wfw:commentRss>/articles/hello-world/feed</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
	</channel>
</rss>
